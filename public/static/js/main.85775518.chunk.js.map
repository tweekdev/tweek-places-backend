{"version":3,"sources":["shared/context/auth-context.js","shared/components/UIElements/LoadingSpinner.js","shared/components/UIElements/Backdrop.js","shared/hooks/auth-hook.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","App.js","index.js"],"names":["AuthContext","createContext","isLoggedIn","userId","token","login","logout","LoadingSpinner","props","className","asOverlay","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","logoutTimer","MainHeader","children","NavLinks","auth","useContext","to","exact","SideDrawer","content","CSSTransition","in","show","timeout","classNames","mountOnEnter","unmountOnExit","MainNavigation","useState","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","Users","React","lazy","NewPlace","UpdatePlace","UserPlaces","Auth","App","routes","setToken","setUserId","tokenExpirationDate","setTokenExpirationDate","useCallback","uid","expirationDate","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","removeItem","useEffect","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","path","Provider","value","fallback","xclassName","render"],"mappings":"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","file":"static/js/main.85775518.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nexport const AuthContext = createContext({\n  isLoggedIn: false,\n  userId: null,\n  token: null,\n  login: () => {},\n  logout: () => {},\n});\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import { useCallback, useEffect, useState } from 'react';\nlet logoutTimer;\n\nexport const useAuth = () => {\n  const [token, setToken] = useState(false);\n  const [userId, setUserId] = useState(false);\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\n\n  const login = useCallback((uid, token, expirationDate) => {\n    setToken(token);\n    setUserId(uid);\n    const tokenExpirationDate =\n      expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\n    localStorage.setItem(\n      'userData',\n      JSON.stringify({\n        userId: uid,\n        token: token,\n        expiration: tokenExpirationDate.toISOString(),\n      })\n    );\n  }, []);\n\n  const logout = useCallback(() => {\n    setToken(token);\n    setTokenExpirationDate(null);\n    setUserId(null);\n    localStorage.removeItem('userData');\n  }, [token]);\n\n  useEffect(() => {\n    if (token && tokenExpirationDate) {\n      const remainingTime =\n        tokenExpirationDate.getTime() - new Date().getTime();\n      logoutTimer = setTimeout(logout, remainingTime);\n    } else {\n      clearTimeout(logoutTimer);\n    }\n  }, [logout, token, tokenExpirationDate]);\n\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem('userData'));\n    if (\n      storedData &&\n      storedData.token &&\n      new Date(storedData.expiration) > new Date()\n    ) {\n      login(\n        storedData.userId,\n        storedData.token,\n        new Date(storedData.expiration)\n      );\n    }\n  }, [login]);\n\n  return { token, login, logout, userId };\n};\n","import React from \"react\";\nimport \"./MainHeader.css\";\n\nconst MainHeader = (props) => {\n  return <header className='main-header'> {props.children} </header>;\n};\n\nexport default MainHeader;\n","import React, { useContext } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { AuthContext } from '../../context/auth-context';\nimport './NavLinks.css';\n\nconst NavLinks = (props) => {\n  const auth = useContext(AuthContext);\n\n  return (\n    <ul className='nav-links'>\n      <li>\n        <NavLink to='/' exact>\n          ALL USERS\n        </NavLink>\n      </li>\n      {auth.isLoggedIn && (\n        <li>\n          <NavLink to={`/${auth.userId}/places`}>MY PLACES</NavLink>\n        </li>\n      )}\n      {auth.isLoggedIn && (\n        <li>\n          <NavLink to='/places/new'>ADD PLACE</NavLink>\n        </li>\n      )}\n      {!auth.isLoggedIn && (\n        <li>\n          <NavLink to='/auth'>AUTHENTICATE</NavLink>\n        </li>\n      )}\n      {auth.isLoggedIn && (\n        <li>\n          <button onClick={auth.logout}>LOGOUT</button>\n        </li>\n      )}\n    </ul>\n  );\n};\n\nexport default NavLinks;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { CSSTransition } from \"react-transition-group\";\nimport \"./SideDrawer.css\";\n\nconst SideDrawer = (props) => {\n  const content = (\n    <CSSTransition\n      in={props.show}\n      timeout={200}\n      classNames='slide-in-left'\n      mountOnEnter\n      unmountOnExit\n    >\n      <aside className='side-drawer' onClick={props.onClick}>\n        {props.children}\n      </aside>\n    </CSSTransition>\n  );\n\n  return ReactDOM.createPortal(content, document.getElementById(\"drawer-hook\"));\n};\n\nexport default SideDrawer;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Backdrop from '../UIElements/Backdrop';\nimport MainHeader from './MainHeader';\nimport './MainNavigation.css';\nimport NavLinks from './NavLinks';\nimport SideDrawer from './SideDrawer';\nconst MainNavigation = () => {\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\n\n  const openDrawerHandler = () => {\n    setDrawerIsOpen(true);\n  };\n\n  const closeDrawerHandler = () => {\n    setDrawerIsOpen(false);\n  };\n  return (\n    <>\n      {drawerIsOpen && <Backdrop onClick={closeDrawerHandler}></Backdrop>}\n      <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\n        <nav className='main-navigation__drawer-nav'>\n          <NavLinks></NavLinks>\n        </nav>\n      </SideDrawer>\n      <MainHeader>\n        <button\n          className='main-navigation__menu-btn'\n          onClick={openDrawerHandler}\n        >\n          <span></span>\n          <span></span>\n          <span></span>\n        </button>\n        <h1 className='main-navigation__title'>\n          <Link to='/'>TweekPlaces</Link>\n        </h1>\n        <nav className='main-navigation__header-nav'>\n          <NavLinks></NavLinks>\n        </nav>\n      </MainHeader>\n    </>\n  );\n};\n\nexport default MainNavigation;\n","import React, { Suspense } from 'react';\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport MainNavigation from './shared/components/Navigation/MainNavigation';\nimport LoadingSpinner from './shared/components/UIElements/LoadingSpinner';\nimport { AuthContext } from './shared/context/auth-context';\nimport { useAuth } from './shared/hooks/auth-hook';\n\nconst Users = React.lazy(() => import('./user/pages/Users'));\nconst NewPlace = React.lazy(() => import('./places/pages/NewPlace'));\nconst UpdatePlace = React.lazy(() => import('./places/pages/UpdatePlace'));\nconst UserPlaces = React.lazy(() => import('./places/pages/UserPlaces'));\nconst Auth = React.lazy(() => import('./user/pages/Auth'));\n\nconst App = () => {\n  const { token, login, logout, userId } = useAuth();\n  let routes;\n\n  if (token) {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/places/new\" exact>\n          <NewPlace />\n        </Route>\n        <Route path=\"/places/:placeId\">\n          <UpdatePlace />\n        </Route>\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/auth\">\n          <Auth />\n        </Route>\n        <Redirect to=\"/auth\" />\n      </Switch>\n    );\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn: !!token,\n        token: token,\n        userId: userId,\n        login: login,\n        logout: logout,\n      }}\n    >\n      <Router>\n        <MainNavigation />\n        <main>\n          <Suspense\n            fallback={\n              <div xclassName=\"center\">\n                <LoadingSpinner></LoadingSpinner>\n              </div>\n            }\n          >\n            {routes}\n          </Suspense>\n        </main>\n      </Router>\n    </AuthContext.Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}